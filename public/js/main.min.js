function previewFiles() {
    $(".progress").show();
    var e = $("#image-browser")[0].files[0],
        t = $("#preview");
    if (e) {
        var i = e.size,
            s = new FileReader;
        if (i > 2097152) return Materialize.toast("Kích thước ảnh lớn! Vui lòng chọn ảnh dưới 2mb", 2e3), $(".progress").hide(), !1;
        s.addEventListener("load", function () {
            var i = new Image;
            i.height = 100, i.title = e.name, i.src = this.result, t.html(i), image.base64 = this.result, $(".progress").hide()
        }, !1), s.readAsDataURL(e)
    } else $(".progress").hide()
}

function _getStatusProcess(e) {
    $.get("/api/images/status/" + e, function (t, i) {
        if ("success" == i) {
            if (Materialize.toast("Trạng thái xử lý: " + t.processing_status, 1500), console.log(t.processing_status), 2 == t.processing_status) return Materialize.toast("Đã xử lý xong.", 3e3), openPhotoSwipe(t.img_final_cf_url), !0;
        }
    })
}

function _doPostBack() {
    var e = filter.nameFilter,
        t = image.base64;
    return "" == t ? (Materialize.toast("Bạn hãy chọn một ảnh!", 1500), !1) : "" == e ? (Materialize.toast("Bạn hãy chọn một filter", 1500), !1) : (Materialize.toast("Đang gửi yêu cầu", 2500), void $.post("/api/images", {
        filter: e,
        image_base64: t
    }, function (e, t) {
        "success" == t && (Materialize.toast("Đang xử lý", 2500),   setTimeout(_getStatusProcess(e.id), 2000))
    }))
}

function getImages(e, t) {
    $(".progress").show(), $.get("/api/homepage/" + e + "/" + t, function (e, t) {
        if ("success" == t) {
            var i = $(".my-gallery"),
                s = e.images;
            s.forEach(function (e) {
                var t = '<div class="div-test col s12 m6 l6" ><a href="' + e.img_final_cf_url + '" title="test"><img class="responsive-img" src="' + e.img_final_tn_500_cf_url + '" itemprop="thumbnail"></a></div>';
                i.append(t)
            }), $(".progress").hide()
        }
    })
}
var filter = {
        name: "Starburst",
        get nameFilter() {
            return this.name
        },
        set nameFilter(e) {
            this.name = e || "Starburst"
        }
    },
    image = {
        data: "",
        get base64() {
            return this.data
        },
        set base64(e) {
            this.data = e || null
        }
    };
jQuery(function (e) {
    "use strict";
    ! function () {
        e("div.highlight-container").click(function () {
            e("div.highlight-container").removeClass("highlighted").addClass("ng-scope"), e(this).toggleClass("ng-scope highlighted");
            var t = e("div").filter(".highlighted");
            filter.nameFilter = t[0].children[1].children[0].textContent
        })
    }(), e(".button-collapse").sideNav(), e("#my-gallery").on("click", "img.gallery-img", function (e) {
        console.log(e)
    }), getImages(10, 0)
});
var openPhotoSwipe = function (e, t) {
    var i, s, a = document.querySelectorAll(".pswp")[0],
        n = [{
            mediumImage: {
                src: e,
                w: 800,
                h: 480
            },
            originalImage: {
                src: e,
                w: 1280,
                h: 768
            }
        }],
        r = new PhotoSwipe(a, PhotoSwipeUI_Default, n),
        o = !1,
        l = !0;
    r.listen("beforeResize", function () {
        i = r.viewportSize.x * window.devicePixelRatio, o && 1e3 > i ? (o = !1, s = !0) : !o && i >= 1e3 && (o = !0, s = !0), s && !l && r.invalidateCurrItems(), l && (l = !1), s = !1
    }), r.listen("gettingData", function (e, t) {
        o ? (t.src = t.originalImage.src, t.w = t.originalImage.w, t.h = t.originalImage.h) : (t.src = t.mediumImage.src, t.w = t.mediumImage.w, t.h = t.mediumImage.h)
    }), r.init()
};
